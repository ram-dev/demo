{"version":3,"sources":["E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile-changepwd/profile-changepwd.component.html","E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile-changepwd/profile-changepwd.component.scss","E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile-changepwd/profile-changepwd.component.ts","E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile-edit/profile-edit.component.html","E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile-edit/profile-edit.component.scss","E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile-edit/profile-edit.component.ts","E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile-routing.module.ts","E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile.component.ts","E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile.module.ts"],"names":[],"mappings":"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","file":"5.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <nb-card>\\r\\n            <nb-card-header>\\r\\n                <h2 class=\\\"title\\\">Change password</h2>\\r\\n                <small class=\\\"form-text sub-title\\\">Please enter a new password</small>\\r\\n            </nb-card-header>\\r\\n            <nb-card-body>\\r\\n                <form [formGroup]=\\\"profileResetPassForm\\\" (ngSubmit)=\\\"onSubmit()\\\"> \\r\\n                    <div *ngIf=\\\"errors && errors.length > 0 && !submitted\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n                        <div *ngFor=\\\"let error of errors\\\">{{ error }}</div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"messages && messages.length > 0 && !submitted\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\r\\n                        <div *ngFor=\\\"let message of messages\\\">{{ message }}</div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"oldpassword\\\" class=\\\"sr-only\\\">Old Password</label>\\r\\n                        <input type=\\\"password\\\" id=\\\"oldpassword\\\" formControlName=\\\"oldpassword\\\" placeholder=\\\"Old Password\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileResetPassForm.get('oldpassword').invalid && profileResetPassForm.get('oldpassword').touched\\\">\\r\\n                        <span *ngIf=\\\"!profileResetPassForm.get('oldpassword').valid && profileResetPassForm.get('oldpassword').touched\\\" class=\\\"form-text error\\\">\\r\\n                                  <span *ngIf=\\\"profileResetPassForm.get('oldpassword').errors['required']\\\">Old password field is required!</span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"newpassword\\\" class=\\\"sr-only\\\">New Password</label>\\r\\n                        <input type=\\\"password\\\" id=\\\"newpassword\\\" formControlName=\\\"newpassword\\\" placeholder=\\\"New Password\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileResetPassForm.get('newpassword').invalid && profileResetPassForm.get('newpassword').touched\\\">\\r\\n                        <span *ngIf=\\\"!profileResetPassForm.get('newpassword').valid && profileResetPassForm.get('newpassword').touched\\\" class=\\\"form-text error\\\">\\r\\n                                  <span *ngIf=\\\"profileResetPassForm.get('newpassword').errors['required']\\\">New password field is required!</span>\\r\\n                        </span>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"confirmpassword\\\" class=\\\"sr-only\\\">Confirm Password</label>\\r\\n                        <input type=\\\"password\\\" id=\\\"confirmpassword\\\" formControlName=\\\"confirmpassword\\\" placeholder=\\\"Confirm Password\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileResetPassForm.get('confirmpassword').invalid && profileResetPassForm.get('confirmpassword').touched\\\">\\r\\n                        <span *ngIf=\\\"!profileResetPassForm.get('confirmpassword').valid && profileResetPassForm.get('confirmpassword').touched\\\" class=\\\"form-text error\\\">\\r\\n                                  <span *ngIf=\\\"profileResetPassForm.get('confirmpassword').errors['required']\\\">Confirm password field is required!</span>\\r\\n                                   <span *ngIf=\\\"profileResetPassForm.get('confirmpassword').errors['NotEqual']\\\">Password does not match the confirm password!</span> \\r\\n                        </span>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <button [disabled]=\\\"submitted || !profileResetPassForm.valid\\\" class=\\\"btn btn-hero-success\\\" [class.btn-pulse]=\\\"submitted\\\">\\r\\n                                Change password\\r\\n                            </button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <br/>\\r\\n                </form>\\r\\n            </nb-card-body>\\r\\n        </nb-card>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile-changepwd/profile-changepwd.component.html\n// module id = ../../../../../src/app/merchants/profile/profile-changepwd/profile-changepwd.component.html\n// module chunks = 5","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".full-width {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  min-width: 220px; }\\n\\nnb-checkbox {\\n  margin-bottom: 1rem; }\\n\\n.form-inline > * {\\n  margin: 0 1.5rem 1.5rem 0; }\\n\\nnb-card.inline-form-card nb-card-body {\\n  padding-bottom: 0; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile-changepwd/profile-changepwd.component.scss\n// module id = ../../../../../src/app/merchants/profile/profile-changepwd/profile-changepwd.component.scss\n// module chunks = 5","import { Component, Inject } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { getDeepFromObject } from '../../helpers';\r\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { UserService } from '../../../@core/data/users.service';\r\n//import { Observable } from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\n@Component({\r\n  selector: 'ngx-profile-cpwd',\r\n  templateUrl: './profile-changepwd.component.html',  \r\n  styleUrls: ['./profile-changepwd.component.scss']  \r\n})\r\nexport class ProfileChangePWDComponent {  \r\n  showMessages: any = {};\r\n  submitted = false;\r\n  errors: string[] = [];\r\n  messages: string[] = [];\r\n  user: any = {};\r\n  profileResetPassForm: FormGroup; \r\n  id: any;\r\n\r\n  constructor(private userService : UserService) {\r\n    this.id = sessionStorage.getItem('userId');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.submitted = false;\r\n    this.profileResetPassForm = new FormGroup({});\r\n    this.profileResetPassForm.addControl('oldpassword', new FormControl('', [Validators.required]));    \r\n    this.profileResetPassForm.addControl('newpassword', new FormControl('', [Validators.required]));\r\n    this.profileResetPassForm.addControl('confirmpassword', new FormControl(\r\n        '', [Validators.compose(\r\n            [Validators.required, this.validateAreEqual.bind(this)]\r\n        )]\r\n    ));    \r\n  }\r\n\r\n  onSubmit() {\r\n    this.errors = [];\r\n    this.messages = [];\r\n    this.submitted = true;\r\n    var formData : any  = {};\r\n    formData = this.profileResetPassForm.value;  \r\n    formData.id = this.id;  \r\n    var self = this;\r\n    if(this.profileResetPassForm.valid){\r\n      this.userService.resetpassword(formData).subscribe(\r\n        (result : any) => {\r\n          self.submitted = false;\r\n          if(result.error) {            \r\n            self.errors.push(result.error);\r\n          }else {\r\n            self.messages.push(\"Password successfully updated\");            \r\n          }        \r\n        },\r\n        (error : any) => {   \r\n          self.submitted = false;     \r\n          \r\n          self.errors.push(error);\r\n      })\r\n    }\r\n  }\r\n\r\n  validateAreEqual(control: FormControl): {[s: string]: boolean}{\r\n    return control.value === this.profileResetPassForm.get(\"newpassword\").value ? null : {\r\n        NotEqual: true\r\n    };    \r\n  }  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile-changepwd/profile-changepwd.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n        <nb-card>\\r\\n            <nb-card-header>\\r\\n                <h2 class=\\\"title\\\">Profile</h2>\\r\\n            </nb-card-header>\\r\\n        </nb-card>\\r\\n        <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <nb-card>\\r\\n                <nb-card-header>\\r\\n                    <small class=\\\"form-text sub-title\\\">User Details</small>\\r\\n                </nb-card-header>\\r\\n                <nb-card-body>\\r\\n                    <div *ngIf=\\\"!profileForm.valid && profileForm.touched\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n                        <div><strong>Please enter valid data!</strong></div>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"!profileForm.valid && errors && errors.length > 0 && !submitted\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n\\t\\t                <div><strong>Oh snap!</strong></div>\\r\\n\\t\\t                <div *ngFor=\\\"let error of errors\\\">{{ error }}</div>\\r\\n\\t\\t            </div>\\r\\n\\t\\t            <div *ngIf=\\\"messages && messages.length > 0 && !submitted\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\r\\n\\t\\t                <div><strong>Hooray!</strong></div>\\r\\n\\t\\t                <div *ngFor=\\\"let message of messages\\\">{{ message }}</div>\\r\\n\\t\\t            </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"firstName\\\">First Name</label>\\r\\n                                <input type=\\\"text\\\" id=\\\"firstName\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileForm.get('firstName').invalid && profileForm.get('firstName').touched\\\">\\r\\n                                <span *ngIf=\\\"!profileForm.get('firstName').valid && profileForm.get('firstName').touched\\\" class=\\\"form-text error\\\">\\t\\t\\t\\t             \\r\\n\\t\\t\\t\\t\\t              <span *ngIf=\\\"profileForm.get('firstName').errors['required']\\\">This field is required!</span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"lastName\\\">Last Name</label>\\r\\n                                <input type=\\\"text\\\" id=\\\"lastName\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileForm.get('lastName').invalid && profileForm.get('lastName').touched\\\">\\r\\n                                <span *ngIf=\\\"!profileForm.get('lastName').valid && profileForm.get('lastName').touched\\\" class=\\\"form-text error\\\">\\t\\t\\t\\t             \\r\\n\\t\\t\\t\\t\\t              <span *ngIf=\\\"profileForm.get('lastName').errors['required']\\\">This field is required!</span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"username\\\">Email</label>\\r\\n                               \\r\\n                                <input type=\\\"text\\\" disabled=\\\"disabled\\\" id=\\\"username1\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileForm.get('username').invalid && profileForm.get('username').touched\\\">\\r\\n                                <span *ngIf=\\\"!profileForm.get('username').valid && profileForm.get('username').touched\\\" class=\\\"form-text error\\\">\\t\\t\\t\\t             \\r\\n\\t\\t\\t\\t\\t              <span *ngIf=\\\"profileForm.get('username').errors['required']\\\">This field is required!</span>\\r\\n                                <span *ngIf=\\\"!profileForm.get('username').valid && profileForm.get('username').touched\\\" class=\\\"form-text error\\\">Please enter a valid email!</span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label class=\\\"\\\">Gender</label>\\r\\n                                <div class=\\\"row\\\">\\r\\n                                    <div class=\\\"form-check col-sm-4\\\" *ngFor=\\\"let gender of genders\\\">\\r\\n                                        <label class=\\\"custom-control custom-radio\\\">\\r\\n                                            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" formControlName=\\\"gender\\\" [value]=\\\"gender\\\">\\r\\n                                            <span class=\\\"custom-control-indicator\\\"></span>\\r\\n                                            <span class=\\\"custom-control-description\\\">{{ gender }}</span>\\r\\n                                        </label>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <span *ngIf=\\\"!profileForm.get('gender').valid && profileForm.get('gender').touched\\\" class=\\\"form-text error\\\">\\t\\t\\t\\t             \\r\\n\\t\\t\\t\\t\\t              <span *ngIf=\\\"profileForm.get('gender').errors['required']\\\">This field is required!</span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"birthDate\\\">Birth date</label>\\r\\n                                <input type=\\\"date\\\" id=\\\"birthDate\\\" formControlName=\\\"birthDate\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileForm.get('birthDate').invalid && profileForm.get('birthDate').touched\\\">\\r\\n                                <span *ngIf=\\\"!profileForm.get('birthDate').valid && profileForm.get('birthDate').touched\\\" class=\\\"form-text error\\\">\\t\\t\\t\\t             \\r\\n\\t\\t\\t\\t\\t              <span *ngIf=\\\"profileForm.get('birthDate').errors['required']\\\">This field is required!</span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\" formGroupName=\\\"contacts\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"phone1\\\">Phone</label>\\r\\n                                <input type=\\\"text\\\" id=\\\"phone1\\\" formControlName=\\\"phone1\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileForm.get('contacts.phone1').invalid && profileForm.get('contacts.phone1').touched\\\">\\r\\n                                <span *ngIf=\\\"!profileForm.get('contacts.phone1').valid && profileForm.get('contacts.phone1').touched\\\" class=\\\"form-text error\\\">\\t\\t\\t\\t             \\r\\n\\t\\t\\t\\t\\t              <span *ngIf=\\\"profileForm.get('contacts.phone1').errors['required']\\\">This field is required!</span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div formGroupName=\\\"contacts\\\" class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"address\\\">Address</label>\\r\\n                                <input type=\\\"text\\\" id=\\\"address\\\" formControlName=\\\"address\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileForm.get('contacts.address').invalid && profileForm.get('contacts.address').touched\\\">\\r\\n                                <span *ngIf=\\\"!profileForm.get('contacts.address').valid && profileForm.get('contacts.address').touched\\\" class=\\\"form-text error\\\">\\t\\t\\t\\t             \\r\\n\\t\\t\\t\\t\\t              <span *ngIf=\\\"profileForm.get('contacts.address').errors['required']\\\">This field is required!</span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"city\\\">City</label>\\r\\n                                <input type=\\\"text\\\" id=\\\"city\\\" formControlName=\\\"city\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileForm.get('contacts.city').invalid && profileForm.get('contacts.city').touched\\\">\\r\\n                                <span *ngIf=\\\"!profileForm.get('contacts.city').valid && profileForm.get('contacts.city').touched\\\" class=\\\"form-text error\\\">\\t\\t\\t\\t             \\r\\n\\t\\t\\t\\t\\t              <span *ngIf=\\\"profileForm.get('contacts.city').errors['required']\\\">This field is required!</span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"state\\\">State</label>\\r\\n                                <input type=\\\"text\\\" id=\\\"state\\\" formControlName=\\\"state\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileForm.get('contacts.state').invalid && profileForm.get('contacts.state').touched\\\">\\r\\n                                <span *ngIf=\\\"!profileForm.get('contacts.state').valid && profileForm.get('contacts.state').touched\\\" class=\\\"form-text error\\\">\\t\\t\\t\\t             \\r\\n\\t\\t\\t\\t\\t              <span *ngIf=\\\"profileForm.get('contacts.state').errors['required']\\\">This field is required!</span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"country\\\">Country</label>\\r\\n                                <input type=\\\"text\\\" id=\\\"country\\\" formControlName=\\\"country\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileForm.get('contacts.country').invalid && profileForm.get('contacts.country').touched\\\">\\r\\n                                <span *ngIf=\\\"!profileForm.get('contacts.country').valid && profileForm.get('contacts.country').touched\\\" class=\\\"form-text error\\\">\\t\\t\\t\\t             \\r\\n\\t\\t\\t\\t\\t              <span *ngIf=\\\"profileForm.get('contacts.country').errors['required']\\\">This field is required!</span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"zip\\\">Zip</label>\\r\\n                                <input type=\\\"text\\\" id=\\\"zip\\\" formControlName=\\\"zip\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileForm.get('contacts.zip').invalid && profileForm.get('contacts.zip').touched\\\">\\r\\n                                <span *ngIf=\\\"!profileForm.get('contacts.zip').valid && profileForm.get('contacts.zip').touched\\\" class=\\\"form-text error\\\">\\t\\t\\t\\t             \\r\\n\\t\\t\\t\\t\\t              <span *ngIf=\\\"profileForm.get('contacts.zip').errors['required']\\\">This field is required!</span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"locality\\\">Landmark</label>\\r\\n                                <input type=\\\"text\\\" id=\\\"locality\\\" formControlName=\\\"locality\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileForm.get('contacts.locality').invalid && profileForm.get('contacts.locality').touched\\\">\\r\\n                                <span *ngIf=\\\"!profileForm.get('contacts.locality').valid && profileForm.get('contacts.locality').touched\\\" class=\\\"form-text error\\\">\\t\\t\\t\\t             \\r\\n\\t\\t\\t\\t\\t              <span *ngIf=\\\"profileForm.get('contacts.locality').errors['required']\\\">This field is required!</span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"phone2\\\">Alternative Number</label>\\r\\n                                <input type=\\\"text\\\" id=\\\"phone2\\\" formControlName=\\\"phone2\\\" class=\\\"form-control\\\" [class.form-control-danger]=\\\"profileForm.get('contacts.phone1').invalid && profileForm.get('contacts.phone1').touched\\\">\\r\\n                                <span *ngIf=\\\"!profileForm.get('contacts.phone2').valid && profileForm.get('contacts.phone2').touched\\\" class=\\\"form-text error\\\">\\t\\t\\t\\t             \\r\\n\\t\\t\\t\\t\\t              <span *ngIf=\\\"profileForm.get('contacts.phone2').errors['required']\\\">This field is required!</span>\\r\\n                                </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </nb-card-body>\\r\\n            </nb-card>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <button [disabled]=\\\"submitted || !profileForm.valid\\\" class=\\\"btn btn-hero-success\\\" type=\\\"submit\\\">\\r\\n                        Save changes\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <br/>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile-edit/profile-edit.component.html\n// module id = ../../../../../src/app/merchants/profile/profile-edit/profile-edit.component.html\n// module chunks = 5","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".full-width {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  min-width: 220px; }\\n\\nnb-checkbox {\\n  margin-bottom: 1rem; }\\n\\n.form-inline > * {\\n  margin: 0 1.5rem 1.5rem 0; }\\n\\nnb-card.inline-form-card nb-card-body {\\n  padding-bottom: 0; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile-edit/profile-edit.component.scss\n// module id = ../../../../../src/app/merchants/profile/profile-edit/profile-edit.component.scss\n// module chunks = 5","import { Component, Inject } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { getDeepFromObject } from '../../helpers';\r\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { UserService } from '../../../@core/data/users.service';\r\n\r\n@Component({\r\n  selector: 'ngx-profile-edit',\r\n  templateUrl: './profile-edit.component.html',  \r\n  styleUrls: ['./profile-edit.component.scss']  \r\n})\r\nexport class ProfileEditComponent {  \r\n  genders = ['Male', 'Female', 'N/A'];  \r\n  profileForm: FormGroup;\r\n  user : any;\r\n  id: any;\r\n  showMessages: any = {};  \r\n  submitted = false;\r\n  errors: string[] = [];\r\n  messages: string[] = [];\r\n\r\n  constructor(private userService : UserService) {\r\n    this.user = {};\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n     this.profileForm = new FormGroup({      \r\n      'username': new FormControl(null, [Validators.required,  Validators.email ]),      \r\n      'firstName': new FormControl(null, [Validators.required]),\r\n      'lastName': new FormControl(null, [Validators.required]),\r\n      'gender': new FormControl('Male', [Validators.required]),\r\n      'birthDate': new FormControl(null, [Validators.required]),\r\n      'contacts': new FormGroup({    \r\n        'address': new FormControl(null, [Validators.required]),\r\n        'zip': new FormControl(null, [Validators.required]),\r\n        'city': new FormControl(null, [Validators.required]),\r\n        'state': new FormControl(null, [Validators.required]),\r\n        'country': new FormControl(null, [Validators.required]),\r\n        'locality': new FormControl(null, [Validators.required]),\r\n        'phone1': new FormControl(null, [Validators.required]), \r\n        'phone2': new FormControl(null, [Validators.required]),        \r\n      }),\r\n    });\r\n    this.userService.getCurrentUser()\r\n      .subscribe(\r\n        data => {\r\n          this.id = data._id;\r\n          var obj : any = {};\r\n          obj.username = data.username;\r\n          obj.firstName = data.firstName;\r\n          obj.lastName = data.lastName;\r\n          obj.gender = data.gender  || this.genders[0];\r\n          var datePipe = new DatePipe(\"en-US\");\r\n          obj.birthDate = datePipe.transform(data.birthDate, 'yyyy-MM-dd') || '';\r\n          obj.contacts = {};\r\n          obj.contacts.address = data.contacts.address || '';\r\n          obj.contacts.zip = data.contacts.zip || '';\r\n          obj.contacts.city = data.contacts.city || '';\r\n          obj.contacts.state = data.contacts.state || '';\r\n          obj.contacts.country = data.contacts.country || '';\r\n          obj.contacts.locality = data.contacts.locality || '';\r\n          obj.contacts.phone1 = data.contacts.phone1 || '';\r\n          obj.contacts.phone2 = data.contacts.phone2 || '';         \r\n          this.user = obj;\r\n          this.initFrom();            \r\n        },\r\n        error => {         \r\n          this.errors.push(error);\r\n        }\r\n      );\r\n    \r\n    \r\n  }\r\n  initFrom (){\r\n    /*this.profileForm.valueChanges.subscribe(\r\n       (value) => console.log(value)\r\n    );\r\n    this.profileForm.statusChanges.subscribe(\r\n      (status) => console.log(status)\r\n    );*/\r\n    this.profileForm.setValue(this.user);\r\n  }\r\n  onSubmit() {\r\n    this.errors = this.messages = [];\r\n    this.submitted = true;\r\n    var formData : any  = {};\r\n    formData = this.profileForm.value;  \r\n    formData.id = this.id;  \r\n   \r\n    if(this.profileForm.valid){\r\n          this.userService.update(formData).subscribe(\r\n            (result) => {\r\n            this.submitted = false\r\n            if (result._id != '') {\r\n              this.messages.push(\"Profile successfully updated\");\r\n            } else {\r\n              this.errors.push(\"Error!\");\r\n            }            \r\n          },\r\n          error => {         \r\n          this.errors.push(error);\r\n        })\r\n    }    \r\n    //this.profileForm.reset();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile-edit/profile-edit.component.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProfileComponent } from './profile.component';\r\nimport { ProfileEditComponent } from './profile-edit/profile-edit.component';\r\nimport { ProfileChangePWDComponent } from './profile-changepwd/profile-changepwd.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: ProfileComponent,\r\n  children: [{\r\n    path: 'edit',\r\n    component: ProfileEditComponent,\r\n  },\r\n  {\r\n    path: 'changepwd',\r\n    component: ProfileChangePWDComponent,\r\n  }]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProfileRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n  ProfileComponent,\r\n  ProfileEditComponent,\r\n  ProfileChangePWDComponent\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile-routing.module.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-profile',\r\n  template: `<router-outlet></router-outlet>`,\r\n})\r\nexport class ProfileComponent {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile.component.ts","import { NgModule } from '@angular/core';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { ProfileRoutingModule, routedComponents } from './profile-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { \r\n  NB_AUTH_TOKEN_WRAPPER_TOKEN, \r\n  NB_AUTH_INTERCEPTOR_HEADER,\r\n  NbAuthSimpleToken, \r\n  NbAuthJWTInterceptor} from '../../auth';\r\n\r\n@NgModule({\r\n  imports: [\r\n    ThemeModule,\r\n    ProfileRoutingModule,\r\n    Ng2SmartTableModule,\r\n    ReactiveFormsModule    \r\n  ],\r\n  declarations: [\r\n    routedComponents,\r\n  ],\r\n  providers: [\r\n    { provide: NB_AUTH_TOKEN_WRAPPER_TOKEN, useClass: NbAuthSimpleToken }, \r\n  ],\r\n})\r\nexport class ProfileModule {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/Deals/code/dealsfrontend/src/app/merchants/profile/profile.module.ts"],"sourceRoot":"webpack:///"}